{"ast":null,"code":"var _jsxFileName = \"/home/vaishnav/Desktop/PREP/CrioDo/CWoD/Stage-2B/xmeme/src/components/Image/Image.js\";\nimport React from 'react';\nimport logo from \"../../logo.svg\";\nimport './Image.css';\nimport UpdateForm from '../UpdateForm/UpdateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      update: undefined\n    };\n  }\n\n  deleteByID(key) {\n    const check = window.confirm(\"Confirm delete Meme having id \" + key);\n\n    if (check) {\n      fetch('http://localhost:8081/memes/' + key, {\n        method: \"DELETE\"\n      }).catch(err => {\n        console.log(err);\n      });\n      window.location.reload();\n    }\n  }\n\n  editByID(key, name, caption, url) {\n    const newCaption = prompt(`Edit Meme by ${name} \\nCaption`, caption);\n    const newURL = prompt(`Edit Meme by ${name} \\nURL`, url);\n    fetch('http://localhost:8081/memes/' + key, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        caption: newCaption,\n        url: newURL\n      })\n    }).catch(err => {\n      console.log(err);\n    });\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      key\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-posted\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header1\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.editByID(this.props.id, this.props.name, this.props.caption, this.props.url),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deleteByID(this.props.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"80%\",\n          src: this.props.url,\n          alt: \"Image not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Image;","map":{"version":3,"sources":["/home/vaishnav/Desktop/PREP/CrioDo/CWoD/Stage-2B/xmeme/src/components/Image/Image.js"],"names":["React","UpdateForm","Image","Component","constructor","props","state","update","undefined","deleteByID","key","check","window","confirm","fetch","method","catch","err","console","log","location","reload","editByID","name","caption","url","newCaption","prompt","newURL","headers","body","JSON","stringify","render","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from '../../logo.svg';\nimport './Image.css';\nimport UpdateForm from '../UpdateForm/UpdateForm';\n\n\nclass Image extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            update : undefined\n        }\n    }\n\n    deleteByID (key) {\n        const check = window.confirm(\"Confirm delete Meme having id \"+ key);\n        if (check){    \n        fetch('http://localhost:8081/memes/'+key, {\n                method: \"DELETE\"\n            })\n            .catch(err => {console.log(err);});\n            window.location.reload();\n\n        } \n    }\n\n    editByID (key, name, caption, url) {\n        const newCaption = prompt(`Edit Meme by ${name} \\nCaption`, caption);\n        const newURL = prompt(`Edit Meme by ${name} \\nURL`, url);\n        fetch('http://localhost:8081/memes/'+key, {\n                method: \"PATCH\",\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    caption: newCaption,\n                    url: newURL\n                  })\n            })\n            .catch(err => {console.log(err);});\n            window.location.reload();\n    }\n\nrender() {\n    const {key} = this.props;\n    return (\n            <div className=\"meme-card\">\n                <div className=\"meme-posted\">\n                    <div className=\"header\">\n                        <div className=\"header1\"><h3>{this.props.name}</h3></div>\n                        <div className=\"header2\">\n                            <button onClick={() => this.editByID(this.props.id, this.props.name, this.props.caption, this.props.url)}>Edit</button>\n                            <button onClick={()=> this.deleteByID(this.props.id)}>Delete</button>\n                        </div>\n                    </div>\n                    <p>{this.props.caption}</p>\n                    <img width=\"80%\" src={this.props.url} alt=\"Image not available\"/>\n                </div>\n            </div>\n      );\n    }\n}\n\n\nexport default Image;"]},"metadata":{},"sourceType":"module"}